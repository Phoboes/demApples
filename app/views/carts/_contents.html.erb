<div class="container">
  <p>
  <strong>User:</strong>
  <%= @cart.user_id %>
  </p>

  <p>
    <strong>Completed:</strong>
    <%= @cart.purchase_completed %>
  </p>

  <div class="items">

  </div>
  <%= link_to "Clear cart", clear_path, data: { confirm: 'Are you sure you want to remove all items?' } %>
  <%= link_to "Pay now", payment_path( @cart ) %>
</div>


<script type="text/javascript">

  var cartID = <%= params["id"] %>

  // TODO Condense ajax calls into a smaller function. The only things that change are the URL, the method and the data (which can be supplied as an object.)

  var addItem = function( id, quantity ){
    $.ajax({
      url: "/carts/add_item/" + id ,
      data: {
        user_id: <%= @current_user.id %>
      },
      dataType: "JSON",
      method: 'post',
      async: false,
      success: function( data ){
        getCart( cartID )
      }
    });
  };

  var removeItem = function( id ){
    $.ajax({
      url: "/carts/remove_item/" + id ,
      data: {
        user_id: <%= @current_user.id %>
      },
      dataType: "JSON",
      method: 'post',
      async: false
    }).success( function( data ){
      getCart( cartID )
    } );
  }

  var deleteItem = function( id ){
    $.ajax({
      url: "/carts/delete_item/" + id ,
      data: {
        user_id: <%= @current_user.id %>
      },
      dataType: "JSON",
      method: 'delete',
      async: false
    }).success( function( data ){
      // console.log(data)
      getCart( cartID )
    } );
  }

  var setItem = function( id, quantity ){
    $.ajax({
      url: "/carts/set_item/" + id ,
      data: {
        user_id: <%= @current_user.id %>,
        id: id,
        quantity: quantity
      },
      dataType: "JSON",
      method: 'post',
      async: false
    }).success( function( data ){
      // console.log(data)
      getCart( cartID )
    } );
  }

  var getCart = function( id ){
    $.ajax({
      url: "/carts/" + id ,
      dataType: "JSON",
      method: 'get'
    }).success(function( d ) {
      // console.log( d );
      renderItems( d );
    });
  }

  getCart( cartID )

  var renderItems = function( d ){
    var row = $('<div></div>');
    $(row).append( '<hr>' );
    var total = 0;
    d.cart.cartItems.forEach( function( item ){

      total += item.quantity * item.productPrice;
      $(row).append(
        '<p>Item: <span class="itemName" >' + item.productName + "</span>" +
        " | Quantity: <span class='quantityName' ><input type='text' class='cartQuantity' data-id='" + item.cartItemId + "' value=" +item.quantity + " /></input></span>" +

        " | Price: <span class='cartPrice' >$" + ( item.quantity * item.productPrice ).toFixed(2) + "</span>" +
        ' | <a class="cartButton" data-id="' + item.cartProductId + '" href="add_item">Add</a>' +
        ' | <a class="cartButton" data-id="' + item.cartProductId + '" href="remove_item">Remove</a>' +
        ' | <a class="cartButton" data-id="' + item.cartItemId + '" href="delete_item">Delete</a>' +
       '</p>' );
    });

    $(row).append( '<hr>' );
    $(row).append( '<p>Total: $' + total.toFixed(2) + '</p>');
    $('.items').html(row);
  };

  $('body').on('click', function(event) {
    if (event.target.tagName.toLowerCase() === 'a') {
      var $el = $( event.target )
      switch( $el.text() ){
        case "Add":
          event.preventDefault();
          addItem( $el.data("id") );
          break;
        case "Remove":
          event.preventDefault();
          removeItem( $el.data("id") );
          break;
        case "Delete":
          event.preventDefault();
          if (confirm("Are you sure?") == true) {
            deleteItem( $el.data("id") );
            break;
          } else {
            return;
          }
        default:
          break;
      }
    } else if ( event.target.tagName.toLowerCase() === 'input' ){
      var $el = $( event.target );
      var targetVal = $el.value
      $( $el ).on( "blur", function(){
        if( this.value !== targetVal ){
          setItem( this.dataset.id, parseInt( this.value ) );
          event.preventDefault();
          if ( parseInt( this.value ) === 0 && confirm( "Are you sure you want to remove this item?" ) == true) {
            deleteItem( $el.data("id") );
          }
        }
      });
    }
  });

</script>
